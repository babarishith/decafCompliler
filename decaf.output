Grammar

    0 $accept: program $end

    1 program: CLASS ID OPENB field_decls method_decls CLOSEB
    2        | CLASS ID OPENB field_decls CLOSEB
    3        | CLASS ID OPENB method_decls CLOSEB
    4        | CLASS ID OPENB CLOSEB

    5 field_decls: field_decl
    6            | field_decls field_decl

    7 field_decl: type identifiers ';'
    8           | type identifier_arrays ';'

    9 identifiers: ID
   10            | identifiers ',' ID

   11 identifier_arrays: identifier_array
   12                  | identifier_arrays ',' identifier_array

   13 identifier_array: ID '[' NUM ']'

   14 method_decls: method_decl
   15             | method_decls method_decl

   16 method_decl: type ID OPENC type_identifiers CLOSEC block
   17            | type ID OPENC CLOSEC block
   18            | VOID ID OPENC type_identifiers CLOSEC block
   19            | VOID ID OPENC CLOSEC block

   20 type_identifiers: type_identifier
   21                 | type_identifiers ',' type_identifier

   22 type_identifier: type ID

   23 block: OPENB var_decls statements CLOSEB
   24      | OPENB var_decls CLOSEB
   25      | OPENB statements CLOSEB
   26      | OPENB CLOSEB

   27 statements: statement
   28           | statements statement

   29 var_decls: var_decl
   30          | var_decls var_decl

   31 var_decl: type identifiers ';'

   32 type: INT
   33     | BOOL

   34 statement: ';'
   35          | location assign_op expr ';'
   36          | method_call ';'
   37          | IF OPENC expr CLOSEC block ELSE block
   38          | IF OPENC expr CLOSEC block
   39          | FOR ID EQ expr ',' expr block
   40          | RETURN expr ';'
   41          | RETURN ';'
   42          | BREAK ';'
   43          | CONTINUE ';'
   44          | block

   45 assign_op: EQ
   46          | PE
   47          | ME

   48 method_call: ID OPENC exprs CLOSEC
   49            | ID OPENC CLOSEC
   50            | CALLOUT OPENC STRING ',' callout_args CLOSEC
   51            | CALLOUT OPENC STRING CLOSEC

   52 exprs: expr
   53      | exprs ',' expr

   54 callout_args: callout_arg
   55             | callout_args ',' callout_arg

   56 location: ID
   57         | ID '[' expr ']'

   58 expr: location
   59     | method_call
   60     | literal
   61     | expr OR expr
   62     | expr AND expr
   63     | expr EE expr
   64     | expr NE expr
   65     | expr LT expr
   66     | expr LE expr
   67     | expr GE expr
   68     | expr GT expr
   69     | expr PLUS expr
   70     | expr MINUS expr
   71     | expr MUL expr
   72     | expr DIV expr
   73     | expr MOD expr
   74     | NOT expr
   75     | MINUS expr
   76     | OPENC expr CLOSEC

   77 callout_arg: expr
   78            | STRING

   79 literal: NUM
   80        | CHAR
   81        | TRUE
   82        | FALSE


Terminals, with rules where they appear

$end (0) 0
',' (44) 10 12 21 39 50 53 55
';' (59) 7 8 31 34 35 36 40 41 42 43
'[' (91) 13 57
']' (93) 13 57
error (256)
OPENC (258) 16 17 18 19 37 38 48 49 50 51 76
CLOSEC (259) 16 17 18 19 37 38 48 49 50 51 76
OPENB (260) 1 2 3 4 23 24 25 26
CLOSEB (261) 1 2 3 4 23 24 25 26
BOOL (262) 33
BREAK (263) 42
CALLOUT (264) 50 51
CLASS (265) 1 2 3 4
CONTINUE (266) 43
ELSE (267) 37
FALSE (268) 82
FOR (269) 39
IF (270) 37 38
INT (271) 32
RETURN (272) 40 41
TRUE (273) 81
VOID (274) 18 19
OR (275) 61
AND (276) 62
EQ (277) 39 45
PE (278) 46
ME (279) 47
EE (280) 63
NE (281) 64
LE (282) 66
LT (283) 65
GE (284) 67
GT (285) 68
PLUS (286) 69
MINUS (287) 70 75
MUL (288) 71
DIV (289) 72
MOD (290) 73
NOT (291) 74
UMINUS (292)
ID (293) 1 2 3 4 9 10 13 16 17 18 19 22 39 48 49 56 57
NUM (294) 13 79
STRING (295) 50 51 78
CHAR (296) 80


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1 2 3 4, on right: 0
field_decls (48)
    on left: 5 6, on right: 1 2 6
field_decl (49)
    on left: 7 8, on right: 5 6
identifiers (50)
    on left: 9 10, on right: 7 10 31
identifier_arrays (51)
    on left: 11 12, on right: 8 12
identifier_array (52)
    on left: 13, on right: 11 12
method_decls (53)
    on left: 14 15, on right: 1 3 15
method_decl (54)
    on left: 16 17 18 19, on right: 14 15
type_identifiers (55)
    on left: 20 21, on right: 16 18 21
type_identifier (56)
    on left: 22, on right: 20 21
block (57)
    on left: 23 24 25 26, on right: 16 17 18 19 37 38 39 44
statements (58)
    on left: 27 28, on right: 23 25 28
var_decls (59)
    on left: 29 30, on right: 23 24 30
var_decl (60)
    on left: 31, on right: 29 30
type (61)
    on left: 32 33, on right: 7 8 16 17 22 31
statement (62)
    on left: 34 35 36 37 38 39 40 41 42 43 44, on right: 27 28
assign_op (63)
    on left: 45 46 47, on right: 35
method_call (64)
    on left: 48 49 50 51, on right: 36 59
exprs (65)
    on left: 52 53, on right: 48 53
callout_args (66)
    on left: 54 55, on right: 50 55
location (67)
    on left: 56 57, on right: 35 58
expr (68)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76, on right: 35 37 38 39 40 52 53 57 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77
callout_arg (69)
    on left: 77 78, on right: 54 55
literal (70)
    on left: 79 80 81 82, on right: 60


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID OPENB field_decls method_decls CLOSEB
    2        | CLASS . ID OPENB field_decls CLOSEB
    3        | CLASS . ID OPENB method_decls CLOSEB
    4        | CLASS . ID OPENB CLOSEB

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . OPENB field_decls method_decls CLOSEB
    2        | CLASS ID . OPENB field_decls CLOSEB
    3        | CLASS ID . OPENB method_decls CLOSEB
    4        | CLASS ID . OPENB CLOSEB

    OPENB  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID OPENB . field_decls method_decls CLOSEB
    2        | CLASS ID OPENB . field_decls CLOSEB
    3        | CLASS ID OPENB . method_decls CLOSEB
    4        | CLASS ID OPENB . CLOSEB

    CLOSEB  shift, and go to state 6
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8
    VOID    shift, and go to state 9

    field_decls   go to state 10
    field_decl    go to state 11
    method_decls  go to state 12
    method_decl   go to state 13
    type          go to state 14


State 6

    4 program: CLASS ID OPENB CLOSEB .

    $default  reduce using rule 4 (program)


State 7

   33 type: BOOL .

    $default  reduce using rule 33 (type)


State 8

   32 type: INT .

    $default  reduce using rule 32 (type)


State 9

   18 method_decl: VOID . ID OPENC type_identifiers CLOSEC block
   19            | VOID . ID OPENC CLOSEC block

    ID  shift, and go to state 15


State 10

    1 program: CLASS ID OPENB field_decls . method_decls CLOSEB
    2        | CLASS ID OPENB field_decls . CLOSEB
    6 field_decls: field_decls . field_decl

    CLOSEB  shift, and go to state 16
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8
    VOID    shift, and go to state 9

    field_decl    go to state 17
    method_decls  go to state 18
    method_decl   go to state 13
    type          go to state 14


State 11

    5 field_decls: field_decl .

    $default  reduce using rule 5 (field_decls)


State 12

    3 program: CLASS ID OPENB method_decls . CLOSEB
   15 method_decls: method_decls . method_decl

    CLOSEB  shift, and go to state 19
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8
    VOID    shift, and go to state 9

    method_decl  go to state 20
    type         go to state 21


State 13

   14 method_decls: method_decl .

    $default  reduce using rule 14 (method_decls)


State 14

    7 field_decl: type . identifiers ';'
    8           | type . identifier_arrays ';'
   16 method_decl: type . ID OPENC type_identifiers CLOSEC block
   17            | type . ID OPENC CLOSEC block

    ID  shift, and go to state 22

    identifiers        go to state 23
    identifier_arrays  go to state 24
    identifier_array   go to state 25


State 15

   18 method_decl: VOID ID . OPENC type_identifiers CLOSEC block
   19            | VOID ID . OPENC CLOSEC block

    OPENC  shift, and go to state 26


State 16

    2 program: CLASS ID OPENB field_decls CLOSEB .

    $default  reduce using rule 2 (program)


State 17

    6 field_decls: field_decls field_decl .

    $default  reduce using rule 6 (field_decls)


State 18

    1 program: CLASS ID OPENB field_decls method_decls . CLOSEB
   15 method_decls: method_decls . method_decl

    CLOSEB  shift, and go to state 27
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8
    VOID    shift, and go to state 9

    method_decl  go to state 20
    type         go to state 21


State 19

    3 program: CLASS ID OPENB method_decls CLOSEB .

    $default  reduce using rule 3 (program)


State 20

   15 method_decls: method_decls method_decl .

    $default  reduce using rule 15 (method_decls)


State 21

   16 method_decl: type . ID OPENC type_identifiers CLOSEC block
   17            | type . ID OPENC CLOSEC block

    ID  shift, and go to state 28


State 22

    9 identifiers: ID .
   13 identifier_array: ID . '[' NUM ']'
   16 method_decl: type ID . OPENC type_identifiers CLOSEC block
   17            | type ID . OPENC CLOSEC block

    OPENC  shift, and go to state 29
    '['    shift, and go to state 30

    $default  reduce using rule 9 (identifiers)


State 23

    7 field_decl: type identifiers . ';'
   10 identifiers: identifiers . ',' ID

    ','  shift, and go to state 31
    ';'  shift, and go to state 32


State 24

    8 field_decl: type identifier_arrays . ';'
   12 identifier_arrays: identifier_arrays . ',' identifier_array

    ','  shift, and go to state 33
    ';'  shift, and go to state 34


State 25

   11 identifier_arrays: identifier_array .

    $default  reduce using rule 11 (identifier_arrays)


State 26

   18 method_decl: VOID ID OPENC . type_identifiers CLOSEC block
   19            | VOID ID OPENC . CLOSEC block

    CLOSEC  shift, and go to state 35
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8

    type_identifiers  go to state 36
    type_identifier   go to state 37
    type              go to state 38


State 27

    1 program: CLASS ID OPENB field_decls method_decls CLOSEB .

    $default  reduce using rule 1 (program)


State 28

   16 method_decl: type ID . OPENC type_identifiers CLOSEC block
   17            | type ID . OPENC CLOSEC block

    OPENC  shift, and go to state 29


State 29

   16 method_decl: type ID OPENC . type_identifiers CLOSEC block
   17            | type ID OPENC . CLOSEC block

    CLOSEC  shift, and go to state 39
    BOOL    shift, and go to state 7
    INT     shift, and go to state 8

    type_identifiers  go to state 40
    type_identifier   go to state 37
    type              go to state 38


State 30

   13 identifier_array: ID '[' . NUM ']'

    NUM  shift, and go to state 41


State 31

   10 identifiers: identifiers ',' . ID

    ID  shift, and go to state 42


State 32

    7 field_decl: type identifiers ';' .

    $default  reduce using rule 7 (field_decl)


State 33

   12 identifier_arrays: identifier_arrays ',' . identifier_array

    ID  shift, and go to state 43

    identifier_array  go to state 44


State 34

    8 field_decl: type identifier_arrays ';' .

    $default  reduce using rule 8 (field_decl)


State 35

   19 method_decl: VOID ID OPENC CLOSEC . block

    OPENB  shift, and go to state 45

    block  go to state 46


State 36

   18 method_decl: VOID ID OPENC type_identifiers . CLOSEC block
   21 type_identifiers: type_identifiers . ',' type_identifier

    ','     shift, and go to state 47
    CLOSEC  shift, and go to state 48


State 37

   20 type_identifiers: type_identifier .

    $default  reduce using rule 20 (type_identifiers)


State 38

   22 type_identifier: type . ID

    ID  shift, and go to state 49


State 39

   17 method_decl: type ID OPENC CLOSEC . block

    OPENB  shift, and go to state 45

    block  go to state 50


State 40

   16 method_decl: type ID OPENC type_identifiers . CLOSEC block
   21 type_identifiers: type_identifiers . ',' type_identifier

    ','     shift, and go to state 47
    CLOSEC  shift, and go to state 51


State 41

   13 identifier_array: ID '[' NUM . ']'

    ']'  shift, and go to state 52


State 42

   10 identifiers: identifiers ',' ID .

    $default  reduce using rule 10 (identifiers)


State 43

   13 identifier_array: ID . '[' NUM ']'

    '['  shift, and go to state 30


State 44

   12 identifier_arrays: identifier_arrays ',' identifier_array .

    $default  reduce using rule 12 (identifier_arrays)


State 45

   23 block: OPENB . var_decls statements CLOSEB
   24      | OPENB . var_decls CLOSEB
   25      | OPENB . statements CLOSEB
   26      | OPENB . CLOSEB

    ';'       shift, and go to state 53
    OPENB     shift, and go to state 45
    CLOSEB    shift, and go to state 54
    BOOL      shift, and go to state 7
    BREAK     shift, and go to state 55
    CALLOUT   shift, and go to state 56
    CONTINUE  shift, and go to state 57
    FOR       shift, and go to state 58
    IF        shift, and go to state 59
    INT       shift, and go to state 8
    RETURN    shift, and go to state 60
    ID        shift, and go to state 61

    block        go to state 62
    statements   go to state 63
    var_decls    go to state 64
    var_decl     go to state 65
    type         go to state 66
    statement    go to state 67
    method_call  go to state 68
    location     go to state 69


State 46

   19 method_decl: VOID ID OPENC CLOSEC block .

    $default  reduce using rule 19 (method_decl)


State 47

   21 type_identifiers: type_identifiers ',' . type_identifier

    BOOL  shift, and go to state 7
    INT   shift, and go to state 8

    type_identifier  go to state 70
    type             go to state 38


State 48

   18 method_decl: VOID ID OPENC type_identifiers CLOSEC . block

    OPENB  shift, and go to state 45

    block  go to state 71


State 49

   22 type_identifier: type ID .

    $default  reduce using rule 22 (type_identifier)


State 50

   17 method_decl: type ID OPENC CLOSEC block .

    $default  reduce using rule 17 (method_decl)


State 51

   16 method_decl: type ID OPENC type_identifiers CLOSEC . block

    OPENB  shift, and go to state 45

    block  go to state 72


State 52

   13 identifier_array: ID '[' NUM ']' .

    $default  reduce using rule 13 (identifier_array)


State 53

   34 statement: ';' .

    $default  reduce using rule 34 (statement)


State 54

   26 block: OPENB CLOSEB .

    $default  reduce using rule 26 (block)


State 55

   42 statement: BREAK . ';'

    ';'  shift, and go to state 73


State 56

   50 method_call: CALLOUT . OPENC STRING ',' callout_args CLOSEC
   51            | CALLOUT . OPENC STRING CLOSEC

    OPENC  shift, and go to state 74


State 57

   43 statement: CONTINUE . ';'

    ';'  shift, and go to state 75


State 58

   39 statement: FOR . ID EQ expr ',' expr block

    ID  shift, and go to state 76


State 59

   37 statement: IF . OPENC expr CLOSEC block ELSE block
   38          | IF . OPENC expr CLOSEC block

    OPENC  shift, and go to state 77


State 60

   40 statement: RETURN . expr ';'
   41          | RETURN . ';'

    ';'      shift, and go to state 78
    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 88
    literal      go to state 89


State 61

   48 method_call: ID . OPENC exprs CLOSEC
   49            | ID . OPENC CLOSEC
   56 location: ID .
   57         | ID . '[' expr ']'

    OPENC  shift, and go to state 90
    '['    shift, and go to state 91

    $default  reduce using rule 56 (location)


State 62

   44 statement: block .

    $default  reduce using rule 44 (statement)


State 63

   25 block: OPENB statements . CLOSEB
   28 statements: statements . statement

    ';'       shift, and go to state 53
    OPENB     shift, and go to state 45
    CLOSEB    shift, and go to state 92
    BREAK     shift, and go to state 55
    CALLOUT   shift, and go to state 56
    CONTINUE  shift, and go to state 57
    FOR       shift, and go to state 58
    IF        shift, and go to state 59
    RETURN    shift, and go to state 60
    ID        shift, and go to state 61

    block        go to state 62
    statement    go to state 93
    method_call  go to state 68
    location     go to state 69


State 64

   23 block: OPENB var_decls . statements CLOSEB
   24      | OPENB var_decls . CLOSEB
   30 var_decls: var_decls . var_decl

    ';'       shift, and go to state 53
    OPENB     shift, and go to state 45
    CLOSEB    shift, and go to state 94
    BOOL      shift, and go to state 7
    BREAK     shift, and go to state 55
    CALLOUT   shift, and go to state 56
    CONTINUE  shift, and go to state 57
    FOR       shift, and go to state 58
    IF        shift, and go to state 59
    INT       shift, and go to state 8
    RETURN    shift, and go to state 60
    ID        shift, and go to state 61

    block        go to state 62
    statements   go to state 95
    var_decl     go to state 96
    type         go to state 66
    statement    go to state 67
    method_call  go to state 68
    location     go to state 69


State 65

   29 var_decls: var_decl .

    $default  reduce using rule 29 (var_decls)


State 66

   31 var_decl: type . identifiers ';'

    ID  shift, and go to state 97

    identifiers  go to state 98


State 67

   27 statements: statement .

    $default  reduce using rule 27 (statements)


State 68

   36 statement: method_call . ';'

    ';'  shift, and go to state 99


State 69

   35 statement: location . assign_op expr ';'

    EQ  shift, and go to state 100
    PE  shift, and go to state 101
    ME  shift, and go to state 102

    assign_op  go to state 103


State 70

   21 type_identifiers: type_identifiers ',' type_identifier .

    $default  reduce using rule 21 (type_identifiers)


State 71

   18 method_decl: VOID ID OPENC type_identifiers CLOSEC block .

    $default  reduce using rule 18 (method_decl)


State 72

   16 method_decl: type ID OPENC type_identifiers CLOSEC block .

    $default  reduce using rule 16 (method_decl)


State 73

   42 statement: BREAK ';' .

    $default  reduce using rule 42 (statement)


State 74

   50 method_call: CALLOUT OPENC . STRING ',' callout_args CLOSEC
   51            | CALLOUT OPENC . STRING CLOSEC

    STRING  shift, and go to state 104


State 75

   43 statement: CONTINUE ';' .

    $default  reduce using rule 43 (statement)


State 76

   39 statement: FOR ID . EQ expr ',' expr block

    EQ  shift, and go to state 105


State 77

   37 statement: IF OPENC . expr CLOSEC block ELSE block
   38          | IF OPENC . expr CLOSEC block

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 106
    literal      go to state 89


State 78

   41 statement: RETURN ';' .

    $default  reduce using rule 41 (statement)


State 79

   76 expr: OPENC . expr CLOSEC

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 107
    literal      go to state 89


State 80

   82 literal: FALSE .

    $default  reduce using rule 82 (literal)


State 81

   81 literal: TRUE .

    $default  reduce using rule 81 (literal)


State 82

   75 expr: MINUS . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 108
    literal      go to state 89


State 83

   74 expr: NOT . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 109
    literal      go to state 89


State 84

   79 literal: NUM .

    $default  reduce using rule 79 (literal)


State 85

   80 literal: CHAR .

    $default  reduce using rule 80 (literal)


State 86

   59 expr: method_call .

    $default  reduce using rule 59 (expr)


State 87

   58 expr: location .

    $default  reduce using rule 58 (expr)


State 88

   40 statement: RETURN expr . ';'
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    ';'    shift, and go to state 110
    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123


State 89

   60 expr: literal .

    $default  reduce using rule 60 (expr)


State 90

   48 method_call: ID OPENC . exprs CLOSEC
   49            | ID OPENC . CLOSEC

    OPENC    shift, and go to state 79
    CLOSEC   shift, and go to state 124
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    exprs        go to state 125
    location     go to state 87
    expr         go to state 126
    literal      go to state 89


State 91

   57 location: ID '[' . expr ']'

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 127
    literal      go to state 89


State 92

   25 block: OPENB statements CLOSEB .

    $default  reduce using rule 25 (block)


State 93

   28 statements: statements statement .

    $default  reduce using rule 28 (statements)


State 94

   24 block: OPENB var_decls CLOSEB .

    $default  reduce using rule 24 (block)


State 95

   23 block: OPENB var_decls statements . CLOSEB
   28 statements: statements . statement

    ';'       shift, and go to state 53
    OPENB     shift, and go to state 45
    CLOSEB    shift, and go to state 128
    BREAK     shift, and go to state 55
    CALLOUT   shift, and go to state 56
    CONTINUE  shift, and go to state 57
    FOR       shift, and go to state 58
    IF        shift, and go to state 59
    RETURN    shift, and go to state 60
    ID        shift, and go to state 61

    block        go to state 62
    statement    go to state 93
    method_call  go to state 68
    location     go to state 69


State 96

   30 var_decls: var_decls var_decl .

    $default  reduce using rule 30 (var_decls)


State 97

    9 identifiers: ID .

    $default  reduce using rule 9 (identifiers)


State 98

   10 identifiers: identifiers . ',' ID
   31 var_decl: type identifiers . ';'

    ','  shift, and go to state 31
    ';'  shift, and go to state 129


State 99

   36 statement: method_call ';' .

    $default  reduce using rule 36 (statement)


State 100

   45 assign_op: EQ .

    $default  reduce using rule 45 (assign_op)


State 101

   46 assign_op: PE .

    $default  reduce using rule 46 (assign_op)


State 102

   47 assign_op: ME .

    $default  reduce using rule 47 (assign_op)


State 103

   35 statement: location assign_op . expr ';'

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 130
    literal      go to state 89


State 104

   50 method_call: CALLOUT OPENC STRING . ',' callout_args CLOSEC
   51            | CALLOUT OPENC STRING . CLOSEC

    ','     shift, and go to state 131
    CLOSEC  shift, and go to state 132


State 105

   39 statement: FOR ID EQ . expr ',' expr block

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 133
    literal      go to state 89


State 106

   37 statement: IF OPENC expr . CLOSEC block ELSE block
   38          | IF OPENC expr . CLOSEC block
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    CLOSEC  shift, and go to state 134
    OR      shift, and go to state 111
    AND     shift, and go to state 112
    EE      shift, and go to state 113
    NE      shift, and go to state 114
    LE      shift, and go to state 115
    LT      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    PLUS    shift, and go to state 119
    MINUS   shift, and go to state 120
    MUL     shift, and go to state 121
    DIV     shift, and go to state 122
    MOD     shift, and go to state 123


State 107

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr
   76     | OPENC expr . CLOSEC

    CLOSEC  shift, and go to state 135
    OR      shift, and go to state 111
    AND     shift, and go to state 112
    EE      shift, and go to state 113
    NE      shift, and go to state 114
    LE      shift, and go to state 115
    LT      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    PLUS    shift, and go to state 119
    MINUS   shift, and go to state 120
    MUL     shift, and go to state 121
    DIV     shift, and go to state 122
    MOD     shift, and go to state 123


State 108

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr
   75     | MINUS expr .

    $default  reduce using rule 75 (expr)


State 109

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr
   74     | NOT expr .

    $default  reduce using rule 74 (expr)


State 110

   40 statement: RETURN expr ';' .

    $default  reduce using rule 40 (statement)


State 111

   61 expr: expr OR . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 136
    literal      go to state 89


State 112

   62 expr: expr AND . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 137
    literal      go to state 89


State 113

   63 expr: expr EE . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 138
    literal      go to state 89


State 114

   64 expr: expr NE . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 139
    literal      go to state 89


State 115

   66 expr: expr LE . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 140
    literal      go to state 89


State 116

   65 expr: expr LT . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 141
    literal      go to state 89


State 117

   67 expr: expr GE . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 142
    literal      go to state 89


State 118

   68 expr: expr GT . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 143
    literal      go to state 89


State 119

   69 expr: expr PLUS . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 144
    literal      go to state 89


State 120

   70 expr: expr MINUS . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 145
    literal      go to state 89


State 121

   71 expr: expr MUL . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 146
    literal      go to state 89


State 122

   72 expr: expr DIV . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 147
    literal      go to state 89


State 123

   73 expr: expr MOD . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 148
    literal      go to state 89


State 124

   49 method_call: ID OPENC CLOSEC .

    $default  reduce using rule 49 (method_call)


State 125

   48 method_call: ID OPENC exprs . CLOSEC
   53 exprs: exprs . ',' expr

    ','     shift, and go to state 149
    CLOSEC  shift, and go to state 150


State 126

   52 exprs: expr .
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 52 (exprs)


State 127

   57 location: ID '[' expr . ']'
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    ']'    shift, and go to state 151
    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123


State 128

   23 block: OPENB var_decls statements CLOSEB .

    $default  reduce using rule 23 (block)


State 129

   31 var_decl: type identifiers ';' .

    $default  reduce using rule 31 (var_decl)


State 130

   35 statement: location assign_op expr . ';'
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    ';'    shift, and go to state 152
    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123


State 131

   50 method_call: CALLOUT OPENC STRING ',' . callout_args CLOSEC

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    STRING   shift, and go to state 153
    CHAR     shift, and go to state 85

    method_call   go to state 86
    callout_args  go to state 154
    location      go to state 87
    expr          go to state 155
    callout_arg   go to state 156
    literal       go to state 89


State 132

   51 method_call: CALLOUT OPENC STRING CLOSEC .

    $default  reduce using rule 51 (method_call)


State 133

   39 statement: FOR ID EQ expr . ',' expr block
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    ','    shift, and go to state 157
    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123


State 134

   37 statement: IF OPENC expr CLOSEC . block ELSE block
   38          | IF OPENC expr CLOSEC . block

    OPENB  shift, and go to state 45

    block  go to state 158


State 135

   76 expr: OPENC expr CLOSEC .

    $default  reduce using rule 76 (expr)


State 136

   61 expr: expr . OR expr
   61     | expr OR expr .
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 61 (expr)


State 137

   61 expr: expr . OR expr
   62     | expr . AND expr
   62     | expr AND expr .
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 62 (expr)


State 138

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   63     | expr EE expr .
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 63 (expr)


State 139

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   64     | expr NE expr .
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 64 (expr)


State 140

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   66     | expr LE expr .
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    LE  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 66 (expr)


State 141

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   65     | expr LT expr .
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    LE  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 65 (expr)


State 142

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   67     | expr GE expr .
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    LE  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 67 (expr)


State 143

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   68     | expr GT expr .
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    LE  error (nonassociative)
    LT  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 68 (expr)


State 144

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   69     | expr PLUS expr .
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    MUL  shift, and go to state 121
    DIV  shift, and go to state 122
    MOD  shift, and go to state 123

    $default  reduce using rule 69 (expr)


State 145

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   70     | expr MINUS expr .
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    MUL  shift, and go to state 121
    DIV  shift, and go to state 122
    MOD  shift, and go to state 123

    $default  reduce using rule 70 (expr)


State 146

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   71     | expr MUL expr .
   72     | expr . DIV expr
   73     | expr . MOD expr

    $default  reduce using rule 71 (expr)


State 147

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   72     | expr DIV expr .
   73     | expr . MOD expr

    $default  reduce using rule 72 (expr)


State 148

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr
   73     | expr MOD expr .

    $default  reduce using rule 73 (expr)


State 149

   53 exprs: exprs ',' . expr

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 159
    literal      go to state 89


State 150

   48 method_call: ID OPENC exprs CLOSEC .

    $default  reduce using rule 48 (method_call)


State 151

   57 location: ID '[' expr ']' .

    $default  reduce using rule 57 (location)


State 152

   35 statement: location assign_op expr ';' .

    $default  reduce using rule 35 (statement)


State 153

   78 callout_arg: STRING .

    $default  reduce using rule 78 (callout_arg)


State 154

   50 method_call: CALLOUT OPENC STRING ',' callout_args . CLOSEC
   55 callout_args: callout_args . ',' callout_arg

    ','     shift, and go to state 160
    CLOSEC  shift, and go to state 161


State 155

   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr
   77 callout_arg: expr .

    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 77 (callout_arg)


State 156

   54 callout_args: callout_arg .

    $default  reduce using rule 54 (callout_args)


State 157

   39 statement: FOR ID EQ expr ',' . expr block

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 162
    literal      go to state 89


State 158

   37 statement: IF OPENC expr CLOSEC block . ELSE block
   38          | IF OPENC expr CLOSEC block .

    ELSE  shift, and go to state 163

    $default  reduce using rule 38 (statement)


State 159

   53 exprs: exprs ',' expr .
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    $default  reduce using rule 53 (exprs)


State 160

   55 callout_args: callout_args ',' . callout_arg

    OPENC    shift, and go to state 79
    CALLOUT  shift, and go to state 56
    FALSE    shift, and go to state 80
    TRUE     shift, and go to state 81
    MINUS    shift, and go to state 82
    NOT      shift, and go to state 83
    ID       shift, and go to state 61
    NUM      shift, and go to state 84
    STRING   shift, and go to state 153
    CHAR     shift, and go to state 85

    method_call  go to state 86
    location     go to state 87
    expr         go to state 155
    callout_arg  go to state 164
    literal      go to state 89


State 161

   50 method_call: CALLOUT OPENC STRING ',' callout_args CLOSEC .

    $default  reduce using rule 50 (method_call)


State 162

   39 statement: FOR ID EQ expr ',' expr . block
   61 expr: expr . OR expr
   62     | expr . AND expr
   63     | expr . EE expr
   64     | expr . NE expr
   65     | expr . LT expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . MUL expr
   72     | expr . DIV expr
   73     | expr . MOD expr

    OPENB  shift, and go to state 45
    OR     shift, and go to state 111
    AND    shift, and go to state 112
    EE     shift, and go to state 113
    NE     shift, and go to state 114
    LE     shift, and go to state 115
    LT     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    PLUS   shift, and go to state 119
    MINUS  shift, and go to state 120
    MUL    shift, and go to state 121
    DIV    shift, and go to state 122
    MOD    shift, and go to state 123

    block  go to state 165


State 163

   37 statement: IF OPENC expr CLOSEC block ELSE . block

    OPENB  shift, and go to state 45

    block  go to state 166


State 164

   55 callout_args: callout_args ',' callout_arg .

    $default  reduce using rule 55 (callout_args)


State 165

   39 statement: FOR ID EQ expr ',' expr block .

    $default  reduce using rule 39 (statement)


State 166

   37 statement: IF OPENC expr CLOSEC block ELSE block .

    $default  reduce using rule 37 (statement)
